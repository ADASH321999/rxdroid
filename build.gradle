apply plugin: 'android'

buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:0.5.+'
	}
}

repositories {
	mavenCentral()
	maven {
		url './.m2repo'
	}
}

dependencies {
		compile 'com.google.code.gson:gson:2.2.4'
		compile 'com.j256.ormlite:ormlite-core:4.47'
		compile 'com.j256.ormlite:ormlite-android:4.47'
		compile 'com.android.support:support-v4:13.0.0'
		compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
		compile 'com.nineoldandroids:library:2.4.0'
	
		compile 'at.jclehner.rxdroid.localmaven:NumberPicker:9999'
		compile 'at.jclehner.rxdroid.localmaven:DragSortListView:9999'
		compile 'at.jclehner.rxdroid.localmaven:ShowcaseView:9999'
}


android {
	buildToolsVersion "18.1"
	compileSdkVersion 18

	signingConfigs {
		release {
			storeFile file(System.getenv("RXDROID_KEYSTORE"))
			keyAlias System.getenv("RXDROID_KEY_ALIAS")
		}
	}

	buildTypes {
		release {
			runProguard false
			proguardFile getDefaultProguardFile('proguard-android.txt')
			proguardFile 'proguard-project.txt'
			signingConfig signingConfigs.release
		}
	}
}


task askForKeystorePassword << {
	def prompt = 
			"\n==========================================================" +
			"\nKeystore : ${android.signingConfigs.release.storeFile}"     +
			"\nKey alias: ${android.signingConfigs.release.keyAlias}"      +
			"\n==========================================================" +
			"\nPassword: "

	def pw = new String(System.console().readPassword(prompt))

	android.signingConfigs.release.storePassword = pw
	android.signingConfigs.release.keyPassword = pw
}

assembleRelease.dependsOn askForKeystorePassword
